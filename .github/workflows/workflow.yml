name: Run checks

on:
  push:
  schedule:
    - cron: '0 9 * * 1,4'

env:
  PYTHON_VERSION_MATRIX: &PYTHON_VERSION_MATRIX [ '3.12', '3.13' ]
  PYTHON_VERSION: &PYTHON_VERSION '3.12'

jobs:
  flake8-lint:
    runs-on: ubuntu-latest
    name: Flake8 Lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup for Project
        uses: ./.github/actions/setup_project
        with:
          python-version: *PYTHON_VERSION

      - name: flake8 Lint
        uses: py-actions/flake8@v2
        with:
          max-line-length: "121"
          exclude:
            - "__init__.py"
            - "*_uic.py"

  check-tests:
    runs-on: ubuntu-latest
    name: Run tests
    strategy:
      matrix:
        python-version: *PYTHON_VERSION_MATRIX
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup for Project
        uses: ./.github/actions/setup_project
        with:
          python-version: '${{ matrix.python-version }}'
      - name: Setup for Linux
        uses: ./.github/actions/setup_linux

      - name: Discover and run tests
        uses: coactions/setup-xvfb@6b00cf1889f4e1d5a48635647013c0508128ee1a
        with:
          run: python -m unittest discover -p *_test.py

  measure-coverage:
    runs-on: ubuntu-latest
    name: Measure coverage
    needs: check-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup for Project
        uses: ./.github/actions/setup_project
        with:
          python-version: *PYTHON_VERSION
      - name: Setup for Linux
        uses: ./.github/actions/setup_linux

      - name: Test and gather coverage data
        uses: coactions/setup-xvfb@6b00cf1889f4e1d5a48635647013c0508128ee1a
        with:
          run: coverage run --omit="build_tools" -m unittest discover -p *_test.py
      - name: Upload coverage data
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build-linux:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' # This job only runs on push events
    name: Build Linux binary
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup for Project
        uses: ./.github/actions/setup_project
        with:
          python-version: *PYTHON_VERSION
      - name: Setup for Linux
        uses: ./.github/actions/setup_linux
      - name: Create Executable
        uses: sayyid5416/pyinstaller@v1
        with:
          python_ver: *PYTHON_VERSION
          spec: 'build_tools/pyinstaller/binary.spec'
          requirements: 'requirements.txt'
          upload_exe_with_name: 'PyQtTemplate Linux Binary'
  build-windows:
    runs-on: windows-latest
    if: github.event_name == 'push' # This job only runs on push events
    name: Build Windows binary
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup for Project
        uses: ./.github/actions/setup_project
        with:
          python-version: *PYTHON_VERSION
      - name: Create Executable
        uses: sayyid5416/pyinstaller@v1
        with:
          python_ver: *PYTHON_VERSION
          spec: 'build_tools/pyinstaller/binary.spec'
          requirements: 'requirements.txt'
          upload_exe_with_name: 'PyQtTemplate Windows Binary'
